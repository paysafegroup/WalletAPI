@startuml "0-Wallet-Create"
    title "Onboard a customer"

    !theme cerulean-outline

    skinparam dpi 72
    skinparam shadowing false
    skinparam backgroundColor #FFFFFF
    skinparam Sequence {
        ParticipantBorderColor #FFFFFF
        ParticipantBackgroundColor #FFFFFF
        ParticipantFontSize 17
        ParticipantFontColor #282828
        ArrowColor #282828
        LifeLineBorderColor #FBC9D6
    }

    participant "Merchant" as Merchant
    participant "Paysafe API" as PaysafeAPI
    participant "Customer Wallet" as CW

    note left of Merchant: Customer signed up\nKYC complete
    Merchant -> PaysafeAPI: POST /digitalwallets/v1/wallet\ncustomer: {}\naccounts: []\nidentityDocuments: []\ntermsAndConditionsAccepted: true
    activate PaysafeAPI
        PaysafeAPI -> PaysafeAPI: Internal verifications
        PaysafeAPI -> PaysafeAPI: Risk & Compliance\ncontrols
        alt "Verifications, Risk & Compliance controls passed successfully"
            PaysafeAPI -> CW **: Create customer wallet
            Merchant <-- PaysafeAPI: 201 Created\ncustomer: {}\naccounts: []\nidentityDocuments: []
        else "Verifications, Risk or Compliance controls failed"
            Merchant <-- PaysafeAPI: Error\nerror details
            note right: Customer wallet is not created
        end if
    deactivate PaysafeAPI
@enduml


@startuml "2-Deposit-card"
    title "Deposit with a card"

    !theme cerulean-outline

    skinparam dpi 72
    skinparam shadowing false
    skinparam backgroundColor #FFFFFF
    skinparam Sequence {
        ParticipantBorderColor #FFFFFF
        ParticipantBackgroundColor #FFFFFF
        ParticipantFontSize 17
        ParticipantFontColor #282828
        ArrowColor #282828
        LifeLineBorderColor #FBC9D6
    }

    participant Merchant
    box "Paysafe"
        participant "Paysafe API" as PaysafeAPI
        participant "Customer wallet" as CW
        participant "Merchant wallet" as MW
    end box
    participant "3DS auth" as PSP

    note left of Merchant: Customer wallet created

    Merchant -> PaysafeAPI: Create a customer payment handle\n**POST /paymenthub/v1/paymenthandles**\n\nmerchantRefNum\ntransactionType: **PAYMENT**\npaymentType: **CARD**\ncard: {cardNum, cardExpiry, cvv, holderName}\nbillingDetails: {street, country, zip}\namount: 100000\ncurrencyCode: EUR\nwallet: {customerId, fee}

    alt "3DS is required"
        Merchant <-- PaysafeAPI: Return Payment Handle (Action = REDIRECT)\nid\npaymentHandleToken: XXXXXXX\nstatus: **INITIATED**\nlinks: [{rel: redirect_payment, href: https://...., method: GET}, ...]

        Merchant --> PSP: Redirect Customer to 3D Secure
        Merchant <-- PSP: Redirect Customer back to Merchant's system
    else "3DS is NOT required"
        Merchant <-- PaysafeAPI: Return Payment Handle\nid\naction: NONE\npaymentHandleToken: XXXXXXX\nstatus: PAYABLE
    end alt

    ...

    Merchant -> PaysafeAPI: Get PaymentHandle status\n**GET /paymenthub/v1/paymenthandles/{paymenthandle_id}**
    note right: Only needed if status != PAYABLE
    Merchant <-- PaysafeAPI: Return Payment Handle (Action = REDIRECT)\nid\npaymentHandleToken: XXXXXXX\nstatus: **PAYABLE**\n. . .

    Merchant -> PaysafeAPI: Process payment\n**POST /paymenthub/v1/payments**\nmerchantRefNum\namount\ncurrencyCode\npaymentHandleToken\nsettleWithAuth: **true**
    activate PaysafeAPI

        PaysafeAPI [#FF0000]-> CW: Credit deposited amount\nto customer wallet
        PaysafeAPI <-[#FF0000] CW: Debit merchant's fee\nfrom the customer wallet\n(if fee is specified)
        PaysafeAPI [#FF0000]-> MW: Credit merchant's fee\ninto the Merchant wallet
        PaysafeAPI <-[#FF0000] MW: (if applicable)\nDebit Paysafe's fees from the Merchant wallet

        Merchant <-- PaysafeAPI: Return executed Payment Handle\nid\nstatus: COMPLETED\nwallet:\n    customerAccount\n        transactions[]:\n            id\n            status\n            type\n            direction\n            amount\n            fee            \n    merchantAccount\n        transactions[]:\n            id\n            status\n            type\n            direction\n            amount\n            fee
    deactivate PaysafeAPI

	== T + 1 ==

 	PaysafeAPI -> Merchant: Reconciliation report\ntransport protocol to be discussed
    note left: Inlcudes transactions from\nMerchant merchant wallet \nand all customer wallet transactions
@enduml



@startuml "2-Deposit-rapid-transfer"
    title "Deposit with RapidTransfer\ninstant bank transfer"

    !theme cerulean-outline

    skinparam dpi 72
    skinparam shadowing false
    skinparam backgroundColor #FFFFFF
    skinparam Sequence {
        ParticipantBorderColor #FFFFFF
        ParticipantBackgroundColor #FFFFFF
        ParticipantFontSize 17
        ParticipantFontColor #282828
        ArrowColor #282828
        LifeLineBorderColor #FBC9D6
    }

    participant Merchant
    box "Paysafe"
        participant "Paysafe API" as PaysafeAPI
        participant "Customer wallet" as CW
        participant "Merchant wallet" as MW
    end box
    participant "Rapid Transfer" as PSP

    note left of Merchant: Customer wallet created

    Merchant -> PaysafeAPI: Create a customer payment handle\n**POST /paymenthub/v1/paymenthandles**\n\nmerchantRefNum\ntransactionType: **PAYMENT**\npaymentType: **RAPID_TRANSFER**\nrapidTransfer:\n    sepa:\n        {accountHolderName, bic, iban}\nbillingDetails: {street, country, zip}\namount: 100000\ncurrencyCode: EUR\nwallet: {customerId, fee}
    Merchant <-- PaysafeAPI: Return Payment Handle (Action = REDIRECT)\nid\npaymentHandleToken: XXXXXXX\nstatus: **INITIATED**\nlinks: [{rel: redirect_payment, href: https://...., method: GET}, ...]

    Merchant --> PSP: Redirect Customer to Rapid Transfer
    Merchant <-- PSP: Redirect Customer back to Merchant's system

    ...

    Merchant -> PaysafeAPI: Get PaymentHandle status\n**GET /paymenthub/v1/paymenthandles/{paymenthandle_id}**
    note right: Only needed if status != PAYABLE
    Merchant <-- PaysafeAPI: Return Payment Handle (Action = REDIRECT)\nid\npaymentHandleToken: XXXXXXX\nstatus: **PAYABLE**\n. . .

    Merchant -> PaysafeAPI: Process payment\n**POST /paymenthub/v1/payments**\nmerchantRefNum\namount\ncurrencyCode\npaymentHandleToken\nsettleWithAuth: **true**
    activate PaysafeAPI

        PaysafeAPI [#FF0000]-> CW: Credit deposited amount\nto customer wallet
        PaysafeAPI <-[#FF0000] CW: Debit merchant's fee\nfrom the customer wallet\n(if fee is specified)
        PaysafeAPI [#FF0000]-> MW: Credit merchant's fee\ninto the Merchant wallet
        PaysafeAPI <-[#FF0000] MW: (if applicable)\nDebit Paysafe's fees from the Merchant wallet

        Merchant <-- PaysafeAPI: Return executed Payment Handle\nid\nstatus: COMPLETED\nwallet:\n    customerAccount\n        transactions[]:\n            id\n            status\n            type\n            direction\n            amount\n            fee            \n    merchantAccount\n        transactions[]:\n            id\n            status\n            type\n            direction\n            amount\n            fee
    deactivate PaysafeAPI

	== T + 1 ==

 	PaysafeAPI -> Merchant: Reconciliation report\ntransport protocol to be discussed
    note left: Inlcudes transactions from\nMerchant merchant wallet \nand all customer wallet transactions
@enduml


@startuml "3-Withdraw-bank-account"
    title "Withdraw to a bank account"

    !theme cerulean-outline

    skinparam dpi 72
    skinparam shadowing false
    skinparam backgroundColor #FFFFFF
    skinparam Sequence {
        ParticipantBorderColor #FFFFFF
        ParticipantBackgroundColor #FFFFFF
        ParticipantFontSize 17
        ParticipantFontColor #282828
        ArrowColor #282828
        LifeLineBorderColor #FBC9D6
    }

    participant Merchant
    box "Paysafe"
        participant "Paysafe API" as PaysafeAPI
        participant "Customer wallet" as CW
        participant "Merchant wallet" as MW
    end box
    participant "Customer's Bank Account" as CBA

    note left of Merchant: Customer wallet created

    Merchant -> PaysafeAPI: Create a customer payment handle\n**POST /paymenthub/v1/paymenthandles**\n\nmerchantRefNum\ntransactionType: **STANDALONE_CREDIT**\npaymentType: **BANK_TRANSFER**\nsepa:\n    {accountHolderName, bic, iban}\namount: 100000\ncurrencyCode: EUR\nwallet: \n    customerId\n    fee\n    customerAccount:\n        id
    Merchant <-- PaysafeAPI: Return Payment Handle (Action = NONE)\nid\npaymentHandleToken: XXXXXXX\nstatus: **PAYABLE**

    ...

    Merchant -> PaysafeAPI: Process standalone credit\n**POST /paymenthub/v1/standalonecredits**\nmerchantRefNum\namount\ncurrencyCode\npaymentHandleToken
    activate PaysafeAPI

        PaysafeAPI <-[#FF0000] CW: Debit amount to withdraw\nfrom Customer wallet
        PaysafeAPI -> PaysafeAPI: Schedule bank wire tranfer\nto Customer's bank account
        PaysafeAPI <-[#FF0000] CW: (if fee is specified)\nDebit merchant's fee\nfrom the Customer wallet
        PaysafeAPI [#FF0000]-> MW: (if fee is specified)\nCredit merchant's fee\ninto the Merchant wallet
        PaysafeAPI <-[#FF0000] MW: (if applicable)\nDebit Paysafe's fees from the Merchant wallet

        Merchant <-- PaysafeAPI: Return executed Payment Handle\nid\nstatus: COMPLETED\nwallet:\n    customerAccount\n        transactions[]:\n            id\n            status\n            type\n            direction\n            amount\n            fee            \n    merchantAccount\n        transactions[]:\n            id\n            status\n            type\n            direction\n            amount\n            fee
    deactivate PaysafeAPI

    == . . . ==

    PaysafeAPI [#FF0000]-> CBA: Bank wire transfer to customer's bank account

	== T + 1 ==

 	PaysafeAPI -> Merchant: Reconciliation report\ntransport protocol to be discussed
    note left: Inlcudes transactions from\nMerchant merchant wallet \nand all customer wallet transactions
@enduml


@startuml "3-Withdraw-card"
    title "Withdraw to a card"

    !theme cerulean-outline

    skinparam dpi 72
    skinparam shadowing false
    skinparam backgroundColor #FFFFFF
    skinparam Sequence {
        ParticipantBorderColor #FFFFFF
        ParticipantBackgroundColor #FFFFFF
        ParticipantFontSize 17
        ParticipantFontColor #282828
        ArrowColor #282828
        LifeLineBorderColor #FBC9D6
    }

    participant Merchant
    box "Paysafe"
        participant "Paysafe API" as PaysafeAPI
        participant "Customer wallet" as CW
        participant "Merchant wallet" as MW
    end box

    note left of Merchant: Customer wallet created

    Merchant -> PaysafeAPI: Create a customer payment handle\n**POST /paymenthub/v1/paymenthandles**\n\nmerchantRefNum\ntransactionType: **STANDALONE_CREDIT**\npaymentType: **CARD**\ncard: {cardNum, cardExpiry, cvv, holderName}\nbillingDetails: {street, country, zip}\namount: 100000\ncurrencyCode: EUR\nwallet:\n    customerId\n    fee\n    customerAccount\n        id
    Merchant <-- PaysafeAPI: Return Payment Handle (Action = NONE)\nid\npaymentHandleToken: XXXXXXX\nstatus: **PAYABLE**

    ...

    Merchant -> PaysafeAPI: Process standalone credit\n**POST /paymenthub/v1/standalonecredits**\nmerchantRefNum\namount\ncurrencyCode\npaymentHandleToken
    activate PaysafeAPI

        PaysafeAPI <-[#FF0000] CW: Debit amount to withdraw\nfrom Customer wallet
        PaysafeAPI -> PaysafeAPI: Schedule execution of standalone credit\nto customer's card
        PaysafeAPI <-[#FF0000] CW: (if fee is specified)\nDebit merchant's fee\nfrom the Customer wallet
        PaysafeAPI [#FF0000]-> MW: (if fee is specified)\nCredit merchant's fee\ninto the Merchant wallet
        PaysafeAPI <-[#FF0000] MW: (if applicable)\nDebit Paysafe's fees from the Merchant wallet

        Merchant <-- PaysafeAPI: Return executed Payment Handle\nid\nstatus: COMPLETED\nwallet:\n    customerAccount\n        transactions[]:\n            id\n            status\n            type\n            direction\n            amount\n            fee            \n    merchantAccount\n        transactions[]:\n            id\n            status\n            type\n            direction\n            amount\n            fee
    deactivate PaysafeAPI

	== T + 1 ==

 	PaysafeAPI -> Merchant: Reconciliation report\ntransport protocol to be discussed
    note left: Inlcudes transactions from\nMerchant merchant wallet \nand all customer wallet transactions
@enduml


